#*******************************************************************************
#
# Find ARBOS headers, library and binary.
#
# Author: Maxime Arthaud
#
# Contact: ikos@lists.nasa.gov
#
# Notices:
#
# Copyright (c) 2011-2016 United States Government as represented by the
# Administrator of the National Aeronautics and Space Administration.
# All Rights Reserved.
#
# Disclaimers:
#
# No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY WARRANTY OF
# ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED
# TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO SPECIFICATIONS,
# ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
# OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE
# ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM TO
# THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN
# ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS,
# RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS
# RESULTING FROM USE OF THE SUBJECT SOFTWARE.  FURTHER, GOVERNMENT AGENCY
# DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE,
# IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT "AS IS."
#
# Waiver and Indemnity:  RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS AGAINST
# THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL
# AS ANY PRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT SOFTWARE RESULTS
# IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING FROM SUCH
# USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING FROM,
# RECIPIENT'S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD
# HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS,
# AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW.
# RECIPIENT'S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE,
# UNILATERAL TERMINATION OF THIS AGREEMENT.
#
#*****************************************************************************/

if (NOT ARBOS_FOUND)
  set(ARBOS_ROOT "" CACHE PATH "Path to arbos install directory.")

  set(ARBOS_INCLUDE_SEARCH_DIRS "")
  set(ARBOS_LIB_SEARCH_DIRS "")
  set(ARBOS_BIN_SEARCH_DIRS "")

  if (ARBOS_ROOT)
    list(APPEND ARBOS_INCLUDE_SEARCH_DIRS "${ARBOS_ROOT}/include")
    list(APPEND ARBOS_LIB_SEARCH_DIRS "${ARBOS_ROOT}/lib")
    list(APPEND ARBOS_BIN_SEARCH_DIRS "${ARBOS_ROOT}/bin")
  endif()
  if (DEFINED ENV{ARBOS_INSTALL})
    list(APPEND ARBOS_INCLUDE_SEARCH_DIRS "$ENV{ARBOS_INSTALL}/include")
    list(APPEND ARBOS_LIB_SEARCH_DIRS "$ENV{ARBOS_INSTALL}/lib")
    list(APPEND ARBOS_BIN_SEARCH_DIRS "$ENV{ARBOS_INSTALL}/bin")
  endif()
  if (DEFINED ENV{IKOS_INSTALL})
    list(APPEND ARBOS_INCLUDE_SEARCH_DIRS "$ENV{IKOS_INSTALL}/include")
    list(APPEND ARBOS_LIB_SEARCH_DIRS "$ENV{IKOS_INSTALL}/lib")
    list(APPEND ARBOS_BIN_SEARCH_DIRS "$ENV{IKOS_INSTALL}/bin")
  endif()

  find_path(ARBOS_INCLUDE_DIR
    NAMES arbos/semantics/ar.hpp
    HINTS ${ARBOS_INCLUDE_SEARCH_DIRS}
  )

  find_library(ARBOS_LIB
    NAMES arbos-api
    HINTS ${ARBOS_LIB_SEARCH_DIRS}
  )

  find_program(ARBOS_BIN
    NAMES arbos
    HINTS ${ARBOS_BIN_SEARCH_DIRS}
  )

  mark_as_advanced(ARBOS_INCLUDE_DIR ARBOS_LIB ARBOS_BIN)

  include(FindPackageHandleStandardArgs)
  find_package_handle_standard_args(ARBOS
    REQUIRED_VARS ARBOS_INCLUDE_DIR ARBOS_LIB ARBOS_BIN
    FAIL_MESSAGE "Could NOT find ARBOS. Please provide -DARBOS_ROOT=<arbos-directory>")
endif()
